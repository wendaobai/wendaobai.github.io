import{_ as s,c as a,o as n,e as l}from"./app.1c8695ff.js";const y=JSON.parse('{"title":"linux常见命令","description":"","frontmatter":{},"headers":[{"level":3,"title":"1、ls命令","slug":"_1、ls命令","link":"#_1、ls命令","children":[]},{"level":3,"title":"2、cd 命令","slug":"_2、cd-命令","link":"#_2、cd-命令","children":[]},{"level":3,"title":"3、pwd 命令","slug":"_3、pwd-命令","link":"#_3、pwd-命令","children":[]},{"level":3,"title":"5、rm 命令","slug":"_5、rm-命令","link":"#_5、rm-命令","children":[]},{"level":3,"title":"6、rmdir 命令","slug":"_6、rmdir-命令","link":"#_6、rmdir-命令","children":[]},{"level":3,"title":"7、mv 命令","slug":"_7、mv-命令","link":"#_7、mv-命令","children":[]},{"level":3,"title":"8、cp 命令","slug":"_8、cp-命令","link":"#_8、cp-命令","children":[]},{"level":3,"title":"9、cat 命令","slug":"_9、cat-命令","link":"#_9、cat-命令","children":[]},{"level":3,"title":"10、more 命令","slug":"_10、more-命令","link":"#_10、more-命令","children":[]},{"level":3,"title":"11、less 命令","slug":"_11、less-命令","link":"#_11、less-命令","children":[]},{"level":3,"title":"12、head 命令","slug":"_12、head-命令","link":"#_12、head-命令","children":[]},{"level":3,"title":"13、tail 命令","slug":"_13、tail-命令","link":"#_13、tail-命令","children":[]},{"level":3,"title":"14、which 命令","slug":"_14、which-命令","link":"#_14、which-命令","children":[]},{"level":3,"title":"15、whereis 命令","slug":"_15、whereis-命令","link":"#_15、whereis-命令","children":[]},{"level":3,"title":"16、locate 命令","slug":"_16、locate-命令","link":"#_16、locate-命令","children":[]},{"level":3,"title":"17、find 命令","slug":"_17、find-命令","link":"#_17、find-命令","children":[]},{"level":3,"title":"18、chmod 命令","slug":"_18、chmod-命令","link":"#_18、chmod-命令","children":[]},{"level":3,"title":"20、chown 命令","slug":"_20、chown-命令","link":"#_20、chown-命令","children":[]},{"level":3,"title":"21、df 命令","slug":"_21、df-命令","link":"#_21、df-命令","children":[]},{"level":3,"title":"22、du 命令","slug":"_22、du-命令","link":"#_22、du-命令","children":[]},{"level":3,"title":"23、ln 命令","slug":"_23、ln-命令","link":"#_23、ln-命令","children":[]},{"level":3,"title":"24、date 命令","slug":"_24、date-命令","link":"#_24、date-命令","children":[]},{"level":3,"title":"25、cal 命令","slug":"_25、cal-命令","link":"#_25、cal-命令","children":[]},{"level":3,"title":"26、grep 命令","slug":"_26、grep-命令","link":"#_26、grep-命令","children":[]},{"level":3,"title":"27、wc 命令","slug":"_27、wc-命令","link":"#_27、wc-命令","children":[]},{"level":3,"title":"28、ps 命令","slug":"_28、ps-命令","link":"#_28、ps-命令","children":[]},{"level":3,"title":"30、kill 命令","slug":"_30、kill-命令","link":"#_30、kill-命令","children":[]},{"level":3,"title":"31、free 命令","slug":"_31、free-命令","link":"#_31、free-命令","children":[]}],"relativePath":"前端运维/linux常见命令.md"}'),p={name:"前端运维/linux常见命令.md"},e=l(`<h1 id="linux常见命令" tabindex="-1">linux常见命令 <a class="header-anchor" href="#linux常见命令" aria-hidden="true">#</a></h1><h3 id="_1、ls命令" tabindex="-1">1、ls命令 <a class="header-anchor" href="#_1、ls命令" aria-hidden="true">#</a></h3><p>就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</p><p><strong>常用参数搭配：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls -a 列出目录所有文件，包含以.开始的隐藏文件</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -A 列出除.及..的其它文件</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -r 反序排列</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -t 以文件修改时间排序</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -S 以文件大小排序</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -h 以易读大小显示</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>(1) 按易读方式按时间反序排序，并显示文件详细信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls -lhrt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>(2) 按大小反序显示文件详细信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls -lrS</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>(3)列出当前目录中所有以&quot;t&quot;开头的目录的详细内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls -l t*</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>(4) 列出文件绝对路径（不包含隐藏文件）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls | sed &quot;s:^:\`pwd\`/:&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>(5) 列出文件绝对路径（包含隐藏文件）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find $pwd -maxdepth 1 | xargs ls -ld</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_2、cd-命令" tabindex="-1">2、cd 命令 <a class="header-anchor" href="#_2、cd-命令" aria-hidden="true">#</a></h3><p>cd(changeDirectory) 命令语法：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd [目录名]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>说明：切换当前目录至 dirName。</p><p><strong>实例：</strong></p><p>（1）进入要目录</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd /</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）进入 &quot;home&quot; 目录</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd ~</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）进入上一次工作路径</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd -</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）把上个命令的参数作为cd参数使用。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cd !$</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_3、pwd-命令" tabindex="-1">3、pwd 命令 <a class="header-anchor" href="#_3、pwd-命令" aria-hidden="true">#</a></h3><p>pwd 命令用于查看当前工作目录路径。</p><p><strong>实例：</strong></p><p>（1）查看当前路径</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">pwd</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）查看软链接的实际路径</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">pwd -P</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>4、mkdir 命令</p><p>mkdir 命令用于创建文件夹。</p><p>可用选项：</p><ul><li><strong>-m</strong>: 对新建目录设置存取权限，也可以用 chmod 命令设置;</li><li><strong>-p</strong>: 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。</li></ul><p><strong>实例：</strong></p><p>（1）当前工作目录下创建名为 t的文件夹</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mkdir t</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）在 tmp 目录下创建路径为 test/t1/t 的目录，若不存在，则创建：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mkdir -p /tmp/test/t1/t</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_5、rm-命令" tabindex="-1">5、rm 命令 <a class="header-anchor" href="#_5、rm-命令" aria-hidden="true">#</a></h3><p>删除一个目录中的一个或多个文件或目录，如果没有使用 -r 选项，则 rm 不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">rm [选项] 文件…</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）删除任何 .log 文件，删除前逐一询问确认：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">rm -i *.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）删除 test 子目录及子目录中所有档案删除，并且不用一一确认：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">rm -rf test</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）删除以 -f 开头的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">rm -- -f*</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_6、rmdir-命令" tabindex="-1">6、rmdir 命令 <a class="header-anchor" href="#_6、rmdir-命令" aria-hidden="true">#</a></h3><p>从一个目录中删除一个或多个子目录项，删除某目录时也必须具有对其父目录的写权限。</p><p><strong>注意</strong>：不能删除非空目录</p><p><strong>实例：</strong></p><p>（1）当 parent 子目录被删除后使它也成为空目录的话，则顺便一并删除：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">rmdir -p parent/child/child11</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_7、mv-命令" tabindex="-1">7、mv 命令 <a class="header-anchor" href="#_7、mv-命令" aria-hidden="true">#</a></h3><p>移动文件或修改文件名，根据第二参数类型（如目录，则移动文件；如为文件则重命令该文件）。</p><p>当第二个参数为目录时，第一个参数可以是多个以空格分隔的文件或目录，然后移动第一个参数指定的多个文件到第二个参数指定的目录中。</p><p><strong>实例：</strong></p><p>（1）将文件 test.log 重命名为 test1.txt</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mv test.log test1.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）将文件 log1.txt,log2.txt,log3.txt 移动到根的 test3 目录中</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mv llog1.txt log2.txt log3.txt /test3</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）将文件 file1 改名为 file2，如果 file2 已经存在，则询问是否覆盖</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mv -i log1.txt log2.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）移动当前文件夹下的所有文件到上一级目录</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mv * ../</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_8、cp-命令" tabindex="-1">8、cp 命令 <a class="header-anchor" href="#_8、cp-命令" aria-hidden="true">#</a></h3><p>将源文件复制至目标文件，或将多个源文件复制至目标目录。</p><p>注意：命令行复制，如果目标文件已经存在会提示是否覆盖，而在 shell 脚本中，如果不加 -i 参数，则不会提示，而是直接覆盖！</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-i 提示</span></span>
<span class="line"><span style="color:#A6ACCD;">-r 复制目录及目录内所有项目</span></span>
<span class="line"><span style="color:#A6ACCD;">-a 复制的文件与原文件时间一样</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）复制 a.txt 到 test 目录下，保持原文件时间，如果原文件存在提示是否覆盖。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cp -ai a.txt test</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）为 a.txt 建立一个链接（快捷方式）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cp -s a.txt link_a.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_9、cat-命令" tabindex="-1">9、cat 命令 <a class="header-anchor" href="#_9、cat-命令" aria-hidden="true">#</a></h3><p>cat 主要有三大功能：</p><p>1.一次显示整个文件:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat filename</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>2.从键盘创建一个文件:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat &gt; filename</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>只能创建新文件，不能编辑已有文件。</p><p>3.将几个文件合并为一个文件:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat file1 file2 &gt; file</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>-b 对非空输出行号</li><li>-n 输出所有行号</li></ul><p><strong>实例：</strong></p><p>（1）把 log2012.log 的文件内容加上行号后输入 log2013.log 这个文件里</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat -n log2012.log log2013.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）把 log2012.log 和 log2013.log 的文件内容加上行号（空白行不加）之后将内容附加到 log.log 里</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat -b log2012.log log2013.log log.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）使用 here doc 生成新文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat &gt;log.txt &lt;&lt;EOF</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;Hello</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;World</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;PWD=$(pwd)</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;EOF</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -l log.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">cat log.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">Hello</span></span>
<span class="line"><span style="color:#A6ACCD;">World</span></span>
<span class="line"><span style="color:#A6ACCD;">PWD=/opt/soft/test</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）反向列示</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tac log.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">PWD=/opt/soft/test</span></span>
<span class="line"><span style="color:#A6ACCD;">World</span></span>
<span class="line"><span style="color:#A6ACCD;">Hello</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_10、more-命令" tabindex="-1">10、more 命令 <a class="header-anchor" href="#_10、more-命令" aria-hidden="true">#</a></h3><p>功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示。</p><p><strong>命令参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">+n      从笫 n 行开始显示</span></span>
<span class="line"><span style="color:#A6ACCD;">-n       定义屏幕大小为n行</span></span>
<span class="line"><span style="color:#A6ACCD;">+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示 </span></span>
<span class="line"><span style="color:#A6ACCD;">-c       从顶部清屏，然后显示</span></span>
<span class="line"><span style="color:#A6ACCD;">-d       提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能</span></span>
<span class="line"><span style="color:#A6ACCD;">-l        忽略Ctrl+l（换页）字符</span></span>
<span class="line"><span style="color:#A6ACCD;">-p       通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似</span></span>
<span class="line"><span style="color:#A6ACCD;">-s       把连续的多个空行显示为一行</span></span>
<span class="line"><span style="color:#A6ACCD;">-u       把文件内容中的下画线去掉</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>常用操作命令：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Enter    向下 n 行，需要定义。默认为 1 行</span></span>
<span class="line"><span style="color:#A6ACCD;">Ctrl+F   向下滚动一屏</span></span>
<span class="line"><span style="color:#A6ACCD;">空格键  向下滚动一屏</span></span>
<span class="line"><span style="color:#A6ACCD;">Ctrl+B  返回上一屏</span></span>
<span class="line"><span style="color:#A6ACCD;">=       输出当前行的行号</span></span>
<span class="line"><span style="color:#A6ACCD;">:f     输出文件名和当前行的行号</span></span>
<span class="line"><span style="color:#A6ACCD;">V      调用vi编辑器</span></span>
<span class="line"><span style="color:#A6ACCD;">!命令   调用Shell，并执行命令</span></span>
<span class="line"><span style="color:#A6ACCD;">q       退出more</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示文件中从第3行起的内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">more +3 text.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）在所列出文件目录详细信息，借助管道使每次显示 5 行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ls -l | more -5</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>按空格显示下 5 行。</p><h3 id="_11、less-命令" tabindex="-1">11、less 命令 <a class="header-anchor" href="#_11、less-命令" aria-hidden="true">#</a></h3><p>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。</p><p><strong>常用命令参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-i  忽略搜索时的大小写</span></span>
<span class="line"><span style="color:#A6ACCD;">-N  显示每行的行号</span></span>
<span class="line"><span style="color:#A6ACCD;">-o  &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</span></span>
<span class="line"><span style="color:#A6ACCD;">-s  显示连续空行为一行</span></span>
<span class="line"><span style="color:#A6ACCD;">/字符串：向下搜索“字符串”的功能</span></span>
<span class="line"><span style="color:#A6ACCD;">?字符串：向上搜索“字符串”的功能</span></span>
<span class="line"><span style="color:#A6ACCD;">n：重复前一个搜索（与 / 或 ? 有关）</span></span>
<span class="line"><span style="color:#A6ACCD;">N：反向重复前一个搜索（与 / 或 ? 有关）</span></span>
<span class="line"><span style="color:#A6ACCD;">-x &lt;数字&gt; 将“tab”键显示为规定的数字空格</span></span>
<span class="line"><span style="color:#A6ACCD;">b  向后翻一页</span></span>
<span class="line"><span style="color:#A6ACCD;">d  向后翻半页</span></span>
<span class="line"><span style="color:#A6ACCD;">h  显示帮助界面</span></span>
<span class="line"><span style="color:#A6ACCD;">Q  退出less 命令</span></span>
<span class="line"><span style="color:#A6ACCD;">u  向前滚动半页</span></span>
<span class="line"><span style="color:#A6ACCD;">y  向前滚动一行</span></span>
<span class="line"><span style="color:#A6ACCD;">空格键 滚动一行</span></span>
<span class="line"><span style="color:#A6ACCD;">回车键 滚动一页</span></span>
<span class="line"><span style="color:#A6ACCD;">[pagedown]： 向下翻动一页</span></span>
<span class="line"><span style="color:#A6ACCD;">[pageup]：   向上翻动一页</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）ps 查看进程信息并通过 less 分页显示</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -aux | less -N</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）查看多个文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">less 1.log 2.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>可以使用 n 查看下一个，使用 p 查看前一个。</p><h3 id="_12、head-命令" tabindex="-1">12、head 命令 <a class="header-anchor" href="#_12、head-命令" aria-hidden="true">#</a></h3><p>head 用来显示档案的开头至标准输出中，默认 head 命令打印其相应文件的开头 10 行。</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-n&lt;行数&gt; 显示的行数（行数为复数表示从最后向前数）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示 1.log 文件中前 20 行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">head 1.log -n 20</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）显示 1.log 文件前 20 字节</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">head -c 20 log2014.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）显示 t.log最后 10 行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">head -n -10 t.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_13、tail-命令" tabindex="-1">13、tail 命令 <a class="header-anchor" href="#_13、tail-命令" aria-hidden="true">#</a></h3><p>用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件。</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-f 循环读取（常用于查看递增的日志文件）</span></span>
<span class="line"><span style="color:#A6ACCD;">-n&lt;行数&gt; 显示行数（从后向前）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（1）循环读取逐渐增加的文件内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ping 127.0.0.1 &gt; ping.log &amp;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>后台运行：可使用 jobs -l 查看，也可使用 fg 将其移到前台运行。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tail -f ping.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（查看日志）</p><h3 id="_14、which-命令" tabindex="-1">14、which 命令 <a class="header-anchor" href="#_14、which-命令" aria-hidden="true">#</a></h3><p>在 linux 要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">which     查看可执行文件的位置。</span></span>
<span class="line"><span style="color:#A6ACCD;">whereis 查看文件的位置。</span></span>
<span class="line"><span style="color:#A6ACCD;">locate  配合数据库查看文件位置。</span></span>
<span class="line"><span style="color:#A6ACCD;">find        实际搜寻硬盘查询文件名称。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>which 是在 PATH 就是指定的路径中，搜索某个系统命令的位置，并返回第一个搜索结果。使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-n 　指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查看 ls 命令是否存在，执行哪个</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">which ls</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）查看 which</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">which which</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）查看 cd</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">which cd（显示不存在，因为 cd 是内建命令，而 which 查找显示是 PATH 中的命令）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>查看当前 PATH 配置：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">echo $PATH</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>或使用 env 查看所有环境变量及对应值</p><h3 id="_15、whereis-命令" tabindex="-1">15、whereis 命令 <a class="header-anchor" href="#_15、whereis-命令" aria-hidden="true">#</a></h3><p>whereis 命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。whereis 及 locate 都是基于系统内建的数据库进行搜索，因此效率很高，而find则是遍历硬盘查找文件。</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-b   定位可执行文件。</span></span>
<span class="line"><span style="color:#A6ACCD;">-m   定位帮助文件。</span></span>
<span class="line"><span style="color:#A6ACCD;">-s   定位源代码文件。</span></span>
<span class="line"><span style="color:#A6ACCD;">-u   搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查找 locate 程序相关文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">whereis locate</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）查找 locate 的源码文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">whereis -s locate</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）查找 lcoate 的帮助文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">whereis -m locate</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_16、locate-命令" tabindex="-1">16、locate 命令 <a class="header-anchor" href="#_16、locate-命令" aria-hidden="true">#</a></h3><p>locate 通过搜寻系统内建文档数据库达到快速找到档案，数据库由 updatedb 程序来更新，updatedb 是由 cron daemon 周期性调用的。默认情况下 locate 命令在搜寻数据库时比由整个由硬盘资料来搜寻资料来得快，但较差劲的是 locate 所找到的档案若是最近才建立或 刚更名的，可能会找不到，在内定值中，updatedb 每天会跑一次，可以由修改 crontab 来更新设定值 (etc/crontab)。</p><p>locate 与 find 命令相似，可以使用如 *、? 等进行正则匹配查找</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-l num（要显示的行数）</span></span>
<span class="line"><span style="color:#A6ACCD;">-f   将特定的档案系统排除在外，如将proc排除在外</span></span>
<span class="line"><span style="color:#A6ACCD;">-r   使用正则运算式做为寻找条件</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查找和 pwd 相关的所有文件(文件名中包含 pwd）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">locate pwd</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）搜索 etc 目录下所有以 sh 开头的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">locate /etc/sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）查找 /var 目录下，以 reason 结尾的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">locate -r &#39;^/var.*reason$&#39;（其中.表示一个字符，*表示任务多个；.*表示任意多个字符）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_17、find-命令" tabindex="-1">17、find 命令 <a class="header-anchor" href="#_17、find-命令" aria-hidden="true">#</a></h3><p>用于在文件树中查找文件，并作出相应的处理。</p><p>命令格式：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find pathname -options [-print -exec -ok ...]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>命令参数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。</span></span>
<span class="line"><span style="color:#A6ACCD;">-print： find命令将匹配的文件输出到标准输出。</span></span>
<span class="line"><span style="color:#A6ACCD;">-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为&#39;command&#39; {  } \\;，注意{   }和\\；之间的空格。</span></span>
<span class="line"><span style="color:#A6ACCD;">-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>命令选项：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-name 按照文件名查找文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-perm 按文件权限查找文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-user 按文件属主查找文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-group  按照文件所属的组来查找文件。</span></span>
<span class="line"><span style="color:#A6ACCD;">-type  查找某一类型的文件，诸如：</span></span>
<span class="line"><span style="color:#A6ACCD;">   b - 块设备文件</span></span>
<span class="line"><span style="color:#A6ACCD;">   d - 目录</span></span>
<span class="line"><span style="color:#A6ACCD;">   c - 字符设备文件</span></span>
<span class="line"><span style="color:#A6ACCD;">   l - 符号链接文件</span></span>
<span class="line"><span style="color:#A6ACCD;">   p - 管道文件</span></span>
<span class="line"><span style="color:#A6ACCD;">   f - 普通文件</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">-size n :[c] 查找文件长度为n块文件，带有c时表文件字节大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-amin n   查找系统中最后N分钟访问的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-atime n  查找系统中最后n*24小时访问的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-cmin n   查找系统中最后N分钟被改变文件状态的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-ctime n  查找系统中最后n*24小时被改变文件状态的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-mmin n   查找系统中最后N分钟被改变文件数据的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-mtime n  查找系统中最后n*24小时被改变文件数据的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">(用减号-来限定更改时间在距今n日以内的文件，而用加号+来限定更改时间在距今n日以前的文件。 )</span></span>
<span class="line"><span style="color:#A6ACCD;">-maxdepth n 最大查找目录深度</span></span>
<span class="line"><span style="color:#A6ACCD;">-prune 选项来指出需要忽略的目录。在使用-prune选项时要当心，因为如果你同时使用了-depth选项，那么-prune选项就会被find命令忽略</span></span>
<span class="line"><span style="color:#A6ACCD;">-newer 如果希望查找更改时间比某个文件新但比另一个文件旧的所有文件，可以使用-newer选项</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查找 48 小时内修改过的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find -atime -2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）在当前目录查找 以 .log 结尾的文件。 <strong>.</strong> 代表当前目录</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find ./ -name &#39;*.log&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）查找 /opt 目录下 权限为 777 的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find /opt -perm 777</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）查找大于 1K 的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find -size +1000c</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>查找等于 1000 字符的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find -size 1000c </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>-exec 参数后面跟的是 command 命令，它的终止是以 ; 为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。{} 花括号代表前面find查找出来的文件名。</p><p><strong>实例：</strong></p><p>（5）在当前目录中查找更改时间在10日以前的文件并删除它们(无提醒）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -type f -mtime +10 -exec rm -f {} \\;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（6）当前目录中查找所有文件名以.log结尾、更改时间在5日以上的文件，并删除它们，只不过在删除之前先给出提示。 按y键删除文件，按n键不删除</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -name &#39;*.log&#39; mtime +5 -ok -exec rm {} \\;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（7）当前目录下查找文件名以 passwd 开头，内容包含 &quot;pkg&quot; 字符的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -f -name &#39;passwd*&#39; -exec grep &quot;pkg&quot; {} \\;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（8）用 exec 选项执行 cp 命令</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -name &#39;*.log&#39; -exec cp {} test3 \\;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>-xargs find 命令把匹配到的文件传递给 xargs 命令，而 xargs 命令每次只获取一部分文件而不是全部，不像 -exec 选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。</p><p>实例：</p><p>（9）查找当前目录下每个普通文件，然后使用 xargs 来判断文件类型</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -type f -print | xargs file</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（10）查找当前目录下所有以 js 结尾的并且其中包含 &#39;editor&#39; 字符的普通文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -type f -name &quot;*.js&quot; -exec grep -lF &#39;ueditor&#39; {} \\;</span></span>
<span class="line"><span style="color:#A6ACCD;">find -type f -name &#39;*.js&#39; | xargs grep -lF &#39;editor&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（11）利用 xargs 执行 mv 命令</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -name &quot;*.log&quot; | xargs -i mv {} test4</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（12）用 grep 命令在当前目录下的所有普通文件中搜索 hostnames 这个词，并标出所在行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -name \\*(转义） -type f -print | xargs grep -n &#39;hostnames&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（13）查找当前目录中以一个小写字母开头，最后是 4 到 9 加上 .log 结束的文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find . -name &#39;[a-z]*[4-9].log&#39; -print</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（14）在 test 目录查找不在 test4 子目录查找</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find test -path &#39;test/test4&#39; -prune -o -print</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（15）实例1：查找更改时间比文件 log2012.log新但比文件 log2017.log 旧的文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find -newer log2012.log ! -newer log2017.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>使用 depth 选项：</strong></p><p>depth 选项可以使 find 命令向磁带上备份文件系统时，希望首先备份所有的文件，其次再备份子目录中的文件。</p><p>实例：find 命令从文件系统的根目录开始，查找一个名为 CON.FILE 的文件。 它将首先匹配所有的文件然后再进入子目录中查找</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">find / -name &quot;CON.FILE&quot; -depth -print</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_18、chmod-命令" tabindex="-1">18、chmod 命令 <a class="header-anchor" href="#_18、chmod-命令" aria-hidden="true">#</a></h3><p>用于改变 linux 系统文件或目录的访问权限。用它控制文件或目录的访问权限。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。</p><p>每一文件或目录的访问权限都有三组，每组用三位表示，分别为文件属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。可使用 ls -l test.txt 查找。</p><p>以文件 log2012.log 为例：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-rw-r--r-- 1 root root 296K 11-13 06:03 log2012.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第一列共有 10 个位置，第一个字符指定了文件类型。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是 d，表示是一个目录。从第二个字符开始到第十个 9 个字符，3 个字符一组，分别表示了 3 组用户对文件或者目录的权限。权限字符用横线代表空许可，r 代表只读，w 代表写，x 代表可执行。</p><p>常用参数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-c 当发生改变时，报告处理信息</span></span>
<span class="line"><span style="color:#A6ACCD;">-R 处理指定目录以及其子目录下所有文件</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>权限范围：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">u ：目录或者文件的当前的用户</span></span>
<span class="line"><span style="color:#A6ACCD;">g ：目录或者文件的当前的群组</span></span>
<span class="line"><span style="color:#A6ACCD;">o ：除了目录或者文件的当前用户或群组之外的用户或者群组</span></span>
<span class="line"><span style="color:#A6ACCD;">a ：所有的用户及群组</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>权限代号：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">r ：读权限，用数字4表示</span></span>
<span class="line"><span style="color:#A6ACCD;">w ：写权限，用数字2表示</span></span>
<span class="line"><span style="color:#A6ACCD;">x ：执行权限，用数字1表示</span></span>
<span class="line"><span style="color:#A6ACCD;">- ：删除权限，用数字0表示</span></span>
<span class="line"><span style="color:#A6ACCD;">s ：特殊权限</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>实例：</p><p>（1）增加文件 t.log 所有用户可执行权限</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chmod a+x t.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）撤销原来所有的权限，然后使拥有者具有可读权限,并输出处理信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chmod u=r t.log -c</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）给 file 的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chmod 751 t.log -c（或者：chmod u=rwx,g=rx,o=x t.log -c)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）将 test 目录及其子目录所有文件添加可读权限</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chmod u+r,g+r,o+r -R text/ -c</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>19、tar 命令</p><p>用来压缩和解压文件。tar 本身不具有压缩功能，只具有打包功能，有关压缩及解压是调用其它的功能来完成。</p><p>弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-c 建立新的压缩文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-f 指定压缩文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-r 添加文件到已经压缩文件包中</span></span>
<span class="line"><span style="color:#A6ACCD;">-u 添加改了和现有的文件到压缩包中</span></span>
<span class="line"><span style="color:#A6ACCD;">-x 从压缩包中抽取文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-t 显示压缩文件中的内容</span></span>
<span class="line"><span style="color:#A6ACCD;">-z 支持gzip压缩</span></span>
<span class="line"><span style="color:#A6ACCD;">-j 支持bzip2压缩</span></span>
<span class="line"><span style="color:#A6ACCD;">-Z 支持compress解压文件</span></span>
<span class="line"><span style="color:#A6ACCD;">-v 显示操作过程</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>有关 gzip 及 bzip2 压缩:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">gzip 实例：压缩 gzip fileName .tar.gz 和.tgz  解压：gunzip filename.gz 或 gzip -d filename.gz</span></span>
<span class="line"><span style="color:#A6ACCD;">          对应：tar zcvf filename.tar.gz     tar zxvf filename.tar.gz</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">bz2实例：压缩 bzip2 -z filename .tar.bz2 解压：bunzip filename.bz2或bzip -d filename.bz2</span></span>
<span class="line"><span style="color:#A6ACCD;">       对应：tar jcvf filename.tar.gz         解压：tar jxvf filename.tar.bz2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）将文件全部打包成 tar 包</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tar -cvf log.tar 1.log,2.log 或tar -cvf log.*</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）将 /etc 下的所有文件及目录打包到指定目录，并使用 gz 压缩</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tar -zcvf /tmp/etc.tar.gz /etc</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）查看刚打包的文件内容（一定加z，因为是使用 gzip 压缩的）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tar -ztvf /tmp/etc.tar.gz</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）要压缩打包 /home, /etc ，但不要 /home/dmtsai</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tar --exclude /home/dmtsai -zcvf myfile.tar.gz /home/* /etc</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_20、chown-命令" tabindex="-1">20、chown 命令 <a class="header-anchor" href="#_20、chown-命令" aria-hidden="true">#</a></h3><p>chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户 ID；组可以是组名或者组 ID；文件是以空格分开的要改变权限的文件列表，支持通配符。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-c 显示更改的部分的信息</span></span>
<span class="line"><span style="color:#A6ACCD;">-R 处理指定目录及子目录</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）改变拥有者和群组 并显示改变信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chown -c mail:mail log2012.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）改变文件群组</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chown -c :mail t.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）改变文件夹及子文件目录属主及属组为 mail</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">chown -cR mail: test/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_21、df-命令" tabindex="-1">21、df 命令 <a class="header-anchor" href="#_21、df-命令" aria-hidden="true">#</a></h3><p>显示磁盘空间使用情况。获取硬盘被占用了多少空间，目前还剩下多少空间等信息，如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-a 全部文件系统列表</span></span>
<span class="line"><span style="color:#A6ACCD;">-h 以方便阅读的方式显示信息</span></span>
<span class="line"><span style="color:#A6ACCD;">-i 显示inode信息</span></span>
<span class="line"><span style="color:#A6ACCD;">-k 区块为1024字节</span></span>
<span class="line"><span style="color:#A6ACCD;">-l 只显示本地磁盘</span></span>
<span class="line"><span style="color:#A6ACCD;">-T 列出文件系统类型</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示磁盘使用情况</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">df -l</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）以易读方式列出所有文件系统及其类型</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">df -haT</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_22、du-命令" tabindex="-1">22、du 命令 <a class="header-anchor" href="#_22、du-命令" aria-hidden="true">#</a></h3><p>du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看：</p><p>命令格式：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">du [选项] [文件]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-a 显示目录中所有文件大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-k 以KB为单位显示文件大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-m 以MB为单位显示文件大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-g 以GB为单位显示文件大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-h 以易读方式显示文件大小</span></span>
<span class="line"><span style="color:#A6ACCD;">-s 仅显示总计</span></span>
<span class="line"><span style="color:#A6ACCD;">-c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）以易读方式显示文件夹内及子文件夹大小</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">du -h scf/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）以易读方式显示文件夹内所有文件大小</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">du -ah scf/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">du -hc test/ scf/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）输出当前目录下各个子目录所使用的空间</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">du -hc --max-depth=1 scf/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_23、ln-命令" tabindex="-1">23、ln 命令 <a class="header-anchor" href="#_23、ln-命令" aria-hidden="true">#</a></h3><p>功能是为文件在另外一个位置建立一个同步的链接，当在不同目录需要该问题时，就不需要为每一个目录创建同样的文件，通过 ln 创建的链接（link）减少磁盘占用量。</p><p>链接分类：软件链接及硬链接</p><p>软链接：</p><ul><li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li><li>2.软链接可以 跨文件系统 ，硬链接不可以</li><li>3.软链接可以对一个不存在的文件名进行链接</li><li>4.软链接可以对目录进行链接</li></ul><p>硬链接:</p><ul><li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li><li>2.不允许给目录创建硬链接</li><li>3.硬链接只有在同一个文件系统中才能创建</li></ul><p><strong>需要注意：</strong></p><ul><li>第一：ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；</li><li>第二：ln的链接又分软链接和硬链接两种，软链接就是ln –s 源文件 目标文件，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接 ln 源文件 目标文件，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。</li><li>第三：ln指令用在链接文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，且最后的目的地并非是一个已存在的目录，则会出现错误信息。</li></ul><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-b 删除，覆盖以前建立的链接</span></span>
<span class="line"><span style="color:#A6ACCD;">-s 软链接（符号链接）</span></span>
<span class="line"><span style="color:#A6ACCD;">-v 显示详细处理过程</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）给文件创建软链接，并显示操作信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ln -sv source.log link.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）给文件创建硬链接，并显示操作信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ln -v source.log link1.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）给目录创建软链接</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ln -sv /opt/soft/test/test3 /opt/soft/test/test5</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_24、date-命令" tabindex="-1">24、date 命令 <a class="header-anchor" href="#_24、date-命令" aria-hidden="true">#</a></h3><p>显示或设定系统的日期与时间。</p><p>命令参数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-d&lt;字符串&gt; 　显示字符串所指的日期与时间。字符串前后必须加上双引号。</span></span>
<span class="line"><span style="color:#A6ACCD;">-s&lt;字符串&gt; 　根据字符串来设置日期与时间。字符串前后必须加上双引号。</span></span>
<span class="line"><span style="color:#A6ACCD;">-u 　显示GMT。</span></span>
<span class="line"><span style="color:#A6ACCD;">%H 小时(00-23)</span></span>
<span class="line"><span style="color:#A6ACCD;">%I 小时(00-12)</span></span>
<span class="line"><span style="color:#A6ACCD;">%M 分钟(以00-59来表示)</span></span>
<span class="line"><span style="color:#A6ACCD;">%s 总秒数。起算时间为1970-01-01 00:00:00 UTC。</span></span>
<span class="line"><span style="color:#A6ACCD;">%S 秒(以本地的惯用法来表示)</span></span>
<span class="line"><span style="color:#A6ACCD;">%a 星期的缩写。</span></span>
<span class="line"><span style="color:#A6ACCD;">%A 星期的完整名称。</span></span>
<span class="line"><span style="color:#A6ACCD;">%d 日期(以01-31来表示)。</span></span>
<span class="line"><span style="color:#A6ACCD;">%D 日期(含年月日)。</span></span>
<span class="line"><span style="color:#A6ACCD;">%m 月份(以01-12来表示)。</span></span>
<span class="line"><span style="color:#A6ACCD;">%y 年份(以00-99来表示)。</span></span>
<span class="line"><span style="color:#A6ACCD;">%Y 年份(以四位数来表示)。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示下一天</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">date +%Y%m%d --date=&quot;+1 day&quot;  //显示下一天的日期</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）-d参数使用</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">date -d &quot;nov 22&quot;  今年的 11 月 22 日是星期三</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d &#39;2 weeks&#39; 2周后的日期</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d &#39;next monday&#39; (下周一的日期)</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d next-day +%Y%m%d（明天的日期）或者：date -d tomorrow +%Y%m%d</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d last-day +%Y%m%d(昨天的日期) 或者：date -d yesterday +%Y%m%d</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d last-month +%Y%m(上个月是几月)</span></span>
<span class="line"><span style="color:#A6ACCD;">date -d next-month +%Y%m(下个月是几月)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_25、cal-命令" tabindex="-1">25、cal 命令 <a class="header-anchor" href="#_25、cal-命令" aria-hidden="true">#</a></h3><p>可以用户显示公历（阳历）日历如只有一个参数，则表示年份(1-9999)，如有两个参数，则表示月份和年份：</p><p>常用参数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-3 显示前一月，当前月，后一月三个月的日历</span></span>
<span class="line"><span style="color:#A6ACCD;">-m 显示星期一为第一列</span></span>
<span class="line"><span style="color:#A6ACCD;">-j 显示在当前年第几天</span></span>
<span class="line"><span style="color:#A6ACCD;">-y [year]显示当前年[year]份的日历</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示指定年月日期</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cal 9 2012</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）显示2013年每个月日历</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cal -y 2013</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）将星期一做为第一列,显示前中后三月</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cal -3m</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_26、grep-命令" tabindex="-1">26、grep 命令 <a class="header-anchor" href="#_26、grep-命令" aria-hidden="true">#</a></h3><p>强大的文本搜索命令，grep(Global Regular Expression Print) 全局正则表达式搜索。</p><p>grep 的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p><p>命令格式：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">grep [option] pattern file|dir</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>常用参数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-A n --after-context显示匹配字符后n行</span></span>
<span class="line"><span style="color:#A6ACCD;">-B n --before-context显示匹配字符前n行</span></span>
<span class="line"><span style="color:#A6ACCD;">-C n --context 显示匹配字符前后n行</span></span>
<span class="line"><span style="color:#A6ACCD;">-c --count 计算符合样式的列数</span></span>
<span class="line"><span style="color:#A6ACCD;">-i 忽略大小写</span></span>
<span class="line"><span style="color:#A6ACCD;">-l 只列出文件内容符合指定的样式的文件名称</span></span>
<span class="line"><span style="color:#A6ACCD;">-f 从文件中读取关键词</span></span>
<span class="line"><span style="color:#A6ACCD;">-n 显示匹配内容的所在文件中行数</span></span>
<span class="line"><span style="color:#A6ACCD;">-R 递归查找文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>grep 的规则表达式:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">^  #锚定行的开始 如：&#39;^grep&#39;匹配所有以grep开头的行。 </span></span>
<span class="line"><span style="color:#A6ACCD;">$  #锚定行的结束 如：&#39;grep$&#39;匹配所有以grep结尾的行。 </span></span>
<span class="line"><span style="color:#A6ACCD;">.  #匹配一个非换行符的字符 如：&#39;gr.p&#39;匹配gr后接一个任意字符，然后是p。  </span></span>
<span class="line"><span style="color:#A6ACCD;">*  #匹配零个或多个先前字符 如：&#39;*grep&#39;匹配所有一个或多个空格后紧跟grep的行。</span></span>
<span class="line"><span style="color:#A6ACCD;">.*   #一起用代表任意字符。  </span></span>
<span class="line"><span style="color:#A6ACCD;">[]   #匹配一个指定范围内的字符，如&#39;[Gg]rep&#39;匹配Grep和grep。 </span></span>
<span class="line"><span style="color:#A6ACCD;">[^]  #匹配一个不在指定范围内的字符，如：&#39;[^A-FH-Z]rep&#39;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。  </span></span>
<span class="line"><span style="color:#A6ACCD;">\\(..\\)  #标记匹配字符，如&#39;\\(love\\)&#39;，love被标记为1。   </span></span>
<span class="line"><span style="color:#A6ACCD;">\\&lt;      #锚定单词的开始，如:&#39;\\&lt;grep&#39;匹配包含以grep开头的单词的行。</span></span>
<span class="line"><span style="color:#A6ACCD;">\\&gt;      #锚定单词的结束，如&#39;grep\\&gt;&#39;匹配包含以grep结尾的单词的行。</span></span>
<span class="line"><span style="color:#A6ACCD;">x\\{m\\}  #重复字符x，m次，如：&#39;0\\{5\\}&#39;匹配包含5个o的行。 </span></span>
<span class="line"><span style="color:#A6ACCD;">x\\{m,\\}  #重复字符x,至少m次，如：&#39;o\\{5,\\}&#39;匹配至少有5个o的行。  </span></span>
<span class="line"><span style="color:#A6ACCD;">x\\{m,n\\}  #重复字符x，至少m次，不多于n次，如：&#39;o\\{5,10\\}&#39;匹配5--10个o的行。  </span></span>
<span class="line"><span style="color:#A6ACCD;">\\w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：&#39;G\\w*p&#39;匹配以G后跟零个或多个文字或数字字符，然后是p。  </span></span>
<span class="line"><span style="color:#A6ACCD;">\\W    #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。  </span></span>
<span class="line"><span style="color:#A6ACCD;">\\b    #单词锁定符，如: &#39;\\bgrep\\b&#39;只匹配grep。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查找指定进程</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -ef | grep svn</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）查找指定进程个数</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -ef | grep svn -c</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）从文件中读取关键词</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat test1.txt | grep -f key.log</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）从文件夹中递归查找以grep开头的行，并只列出文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">grep -lR &#39;^grep&#39; /tmp</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（5）查找非x开关的行内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">grep &#39;^[^x]&#39; test.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（6）显示包含 ed 或者 at 字符的内容行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">grep -E &#39;ed|at&#39; test.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_27、wc-命令" tabindex="-1">27、wc 命令 <a class="header-anchor" href="#_27、wc-命令" aria-hidden="true">#</a></h3><p>wc(word count)功能为统计指定的文件中字节数、字数、行数，并将统计结果输出</p><p>命令格式：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">wc [option] file..</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>命令参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-c 统计字节数</span></span>
<span class="line"><span style="color:#A6ACCD;">-l 统计行数</span></span>
<span class="line"><span style="color:#A6ACCD;">-m 统计字符数</span></span>
<span class="line"><span style="color:#A6ACCD;">-w 统计词数，一个字被定义为由空白、跳格或换行字符分隔的字符串</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）查找文件的 行数 单词数 字节数 文件名</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">wc text.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>结果：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">7     8     70     test.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）统计输出结果的行数</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cat test.txt | wc -l</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_28、ps-命令" tabindex="-1">28、ps 命令 <a class="header-anchor" href="#_28、ps-命令" aria-hidden="true">#</a></h3><p>ps(process status)，用来查看当前运行的进程状态，一次性查看，如果需要动态连续结果使用 top</p><p>linux上进程有5种状态:</p><ul><li>\\1. 运行(正在运行或在运行队列中等待)</li><li>\\2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</li><li>\\3. 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</li><li>\\4. 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</li><li>\\5. 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</li></ul><p>ps 工具标识进程的5种状态码:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">D 不可中断 uninterruptible sleep (usually IO)</span></span>
<span class="line"><span style="color:#A6ACCD;">R 运行 runnable (on run queue)</span></span>
<span class="line"><span style="color:#A6ACCD;">S 中断 sleeping</span></span>
<span class="line"><span style="color:#A6ACCD;">T 停止 traced or stopped</span></span>
<span class="line"><span style="color:#A6ACCD;">Z 僵死 a defunct (”zombie”) process</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>命令参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-A 显示所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;">a 显示所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;">-a 显示同一终端下所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;">c 显示进程真实名称</span></span>
<span class="line"><span style="color:#A6ACCD;">e 显示环境变量</span></span>
<span class="line"><span style="color:#A6ACCD;">f 显示进程间的关系</span></span>
<span class="line"><span style="color:#A6ACCD;">r 显示当前终端运行的进程</span></span>
<span class="line"><span style="color:#A6ACCD;">-aux 显示所有包含其它使用的进程</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示当前所有进程环境变量及进程间关系</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -ef</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）显示当前所有进程</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -A</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）与grep联用查找某进程</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps -aux | grep apache</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（4）找出与 cron 与 syslog 这两个服务有关的 PID 号码</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ps aux | grep &#39;(cron|syslog)&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>29、top 命令</p><p>显示当前系统正在执行的进程的相关信息，包括进程 ID、内存占用率、CPU 占用率等</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-c 显示完整的进程命令</span></span>
<span class="line"><span style="color:#A6ACCD;">-s 保密模式</span></span>
<span class="line"><span style="color:#A6ACCD;">-p &lt;进程号&gt; 指定进程显示</span></span>
<span class="line"><span style="color:#A6ACCD;">-n &lt;次数&gt;循环显示次数</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>实例：</p><p><strong>（1）</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">top - 14:06:23 up 70 days, 16:44,  2 users,  load average: 1.25, 1.32, 1.35</span></span>
<span class="line"><span style="color:#A6ACCD;">Tasks: 206 total,   1 running, 205 sleeping,   0 stopped,   0 zombie</span></span>
<span class="line"><span style="color:#A6ACCD;">Cpu(s):  5.9%us,  3.4%sy,  0.0%ni, 90.4%id,  0.0%wa,  0.0%hi,  0.2%si,  0.0%st</span></span>
<span class="line"><span style="color:#A6ACCD;">Mem:  32949016k total, 14411180k used, 18537836k free,   169884k buffers</span></span>
<span class="line"><span style="color:#A6ACCD;">Swap: 32764556k total,        0k used, 32764556k free,  3612636k cached</span></span>
<span class="line"><span style="color:#A6ACCD;">PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND  </span></span>
<span class="line"><span style="color:#A6ACCD;">28894 root      22   0 1501m 405m  10m S 52.2  1.3   2534:16 java  </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>前五行是当前系统情况整体的统计信息区。</p><p><strong>第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下：</strong></p><p>14:06:23 — 当前系统时间</p><p>up 70 days, 16:44 — 系统已经运行了70天16小时44分钟（在这期间系统没有重启过的吆！）</p><p>2 users — 当前有2个用户登录系统</p><p>load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。</p><p>load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。</p><p><strong>第二行，Tasks — 任务（进程），具体信息说明如下：</strong></p><p>系统现在共有206个进程，其中处于运行中的有1个，205个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。</p><p><strong>第三行，cpu状态信息，具体属性说明如下：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">5.9%us — 用户空间占用CPU的百分比。</span></span>
<span class="line"><span style="color:#A6ACCD;">3.4% sy — 内核空间占用CPU的百分比。</span></span>
<span class="line"><span style="color:#A6ACCD;">0.0% ni — 改变过优先级的进程占用CPU的百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">90.4% id — 空闲CPU百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">0.0% wa — IO等待占用CPU的百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">0.2% si — 软中断（Software Interrupts）占用CPU的百分比</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>**备注：**在这里CPU的使用比率和windows概念不同，需要理解linux系统用户空间和内核空间的相关知识！</p><p>第四行，内存状态，具体信息如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">32949016k total — 物理内存总量（32GB）</span></span>
<span class="line"><span style="color:#A6ACCD;">14411180k used — 使用中的内存总量（14GB）</span></span>
<span class="line"><span style="color:#A6ACCD;">18537836k free — 空闲内存总量（18GB）</span></span>
<span class="line"><span style="color:#A6ACCD;">169884k buffers — 缓存的内存量 （169M）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>第五行，swap交换分区信息，具体信息说明如下：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">32764556k total — 交换区总量（32GB）</span></span>
<span class="line"><span style="color:#A6ACCD;">0k used — 使用的交换区总量（0K）</span></span>
<span class="line"><span style="color:#A6ACCD;">32764556k free — 空闲交换区总量（32GB）</span></span>
<span class="line"><span style="color:#A6ACCD;">3612636k cached — 缓冲的交换区总量（3.6GB）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>第六行，空行。</strong></p><p><strong>第七行以下：各进程（任务）的状态监控，项目列信息说明如下：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">PID — 进程id</span></span>
<span class="line"><span style="color:#A6ACCD;">USER — 进程所有者</span></span>
<span class="line"><span style="color:#A6ACCD;">PR — 进程优先级</span></span>
<span class="line"><span style="color:#A6ACCD;">NI — nice值。负值表示高优先级，正值表示低优先级</span></span>
<span class="line"><span style="color:#A6ACCD;">VIRT — 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</span></span>
<span class="line"><span style="color:#A6ACCD;">RES — 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</span></span>
<span class="line"><span style="color:#A6ACCD;">SHR — 共享内存大小，单位kb</span></span>
<span class="line"><span style="color:#A6ACCD;">S — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</span></span>
<span class="line"><span style="color:#A6ACCD;">%CPU — 上次更新到现在的CPU时间占用百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">%MEM — 进程使用的物理内存百分比</span></span>
<span class="line"><span style="color:#A6ACCD;">TIME+ — 进程使用的CPU时间总计，单位1/100秒</span></span>
<span class="line"><span style="color:#A6ACCD;">COMMAND — 进程名称（命令名/命令行）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>top 交互命令</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">h 显示top交互命令帮助信息</span></span>
<span class="line"><span style="color:#A6ACCD;">c 切换显示命令名称和完整命令行</span></span>
<span class="line"><span style="color:#A6ACCD;">m 以内存使用率排序</span></span>
<span class="line"><span style="color:#A6ACCD;">P 根据CPU使用百分比大小进行排序</span></span>
<span class="line"><span style="color:#A6ACCD;">T 根据时间/累计时间进行排序</span></span>
<span class="line"><span style="color:#A6ACCD;">W 将当前设置写入~/.toprc文件中</span></span>
<span class="line"><span style="color:#A6ACCD;">o或者O 改变显示项目的顺序</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_30、kill-命令" tabindex="-1">30、kill 命令 <a class="header-anchor" href="#_30、kill-命令" aria-hidden="true">#</a></h3><p>发送指定的信号到相应进程。不指定型号将发送SIGTERM（15）终止指定进程。如果任无法终止该程序可用&quot;-KILL&quot; 参数，其发送的信号为SIGKILL(9) ，将强制结束进程，使用ps命令或者jobs 命令可以查看进程号。root用户将影响用户的进程，非root用户只能影响自己的进程。</p><p><strong>常用参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</span></span>
<span class="line"><span style="color:#A6ACCD;">-a  当处理当前进程时，不限制命令名和进程号的对应关系</span></span>
<span class="line"><span style="color:#A6ACCD;">-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号</span></span>
<span class="line"><span style="color:#A6ACCD;">-s  指定发送信号</span></span>
<span class="line"><span style="color:#A6ACCD;">-u  指定用户</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）先使用ps查找进程pro1，然后用kill杀掉</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">kill -9 $(ps -ef | grep pro1)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_31、free-命令" tabindex="-1">31、free 命令 <a class="header-anchor" href="#_31、free-命令" aria-hidden="true">#</a></h3><p>显示系统内存使用情况，包括物理内存、交互区内存(swap)和内核缓冲区内存。</p><p><strong>命令参数：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">-b 以Byte显示内存使用情况</span></span>
<span class="line"><span style="color:#A6ACCD;">-k 以kb为单位显示内存使用情况</span></span>
<span class="line"><span style="color:#A6ACCD;">-m 以mb为单位显示内存使用情况</span></span>
<span class="line"><span style="color:#A6ACCD;">-g 以gb为单位显示内存使用情况</span></span>
<span class="line"><span style="color:#A6ACCD;">-s&lt;间隔秒数&gt; 持续显示内存</span></span>
<span class="line"><span style="color:#A6ACCD;">-t 显示内存使用总合</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>实例：</strong></p><p>（1）显示内存使用情况</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">free</span></span>
<span class="line"><span style="color:#A6ACCD;">free -k</span></span>
<span class="line"><span style="color:#A6ACCD;">free -m</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（2）以总和的形式显示内存的使用信息</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">free -t</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>（3）周期性查询内存使用情况</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">free -s 10</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,437),t=[e];function o(c,i,r,C,d,A){return n(),a("div",null,t)}const h=s(p,[["render",o]]);export{y as __pageData,h as default};
