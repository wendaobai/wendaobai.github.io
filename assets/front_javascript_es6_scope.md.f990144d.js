import{_ as s,c as a,o as n,d as l}from"./app.e94b66cf.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"javasript 作用域简单介绍","slug":"javasript-作用域简单介绍","link":"#javasript-作用域简单介绍","children":[]},{"level":3,"title":"全局作用域(global scope) 33","slug":"全局作用域-global-scope-33","link":"#全局作用域-global-scope-33","children":[]},{"level":3,"title":"局部作用域（local scope）","slug":"局部作用域-local-scope","link":"#局部作用域-local-scope","children":[]},{"level":3,"title":"块级作用域（block scope）","slug":"块级作用域-block-scope","link":"#块级作用域-block-scope","children":[]},{"level":3,"title":"作用域链","slug":"作用域链","link":"#作用域链","children":[]},{"level":3,"title":"闭包中的作用域","slug":"闭包中的作用域","link":"#闭包中的作用域","children":[]},{"level":3,"title":"参考与demo","slug":"参考与demo","link":"#参考与demo","children":[]},{"level":3,"title":"其他1","slug":"其他1","link":"#其他1","children":[]},{"level":3,"title":"yyynouu","slug":"yyynouu","link":"#yyynouu","children":[]}],"relativePath":"front/javascript/es6/scope.md"}'),o={name:"front/javascript/es6/scope.md"},p=l(`<h3 id="javasript-作用域简单介绍" tabindex="-1"><strong>javasript 作用域简单介绍</strong> <a class="header-anchor" href="#javasript-作用域简单介绍" aria-hidden="true">#</a></h3><h4 id="什么是作用域" tabindex="-1">什么是作用域？ <a class="header-anchor" href="#什么是作用域" aria-hidden="true">#</a></h4><p>作用域是定义变量与函数可以访问的范围，javascript有两作用域类型：全局作用域和局部作用域。以及es6增加块级作用域。</p><h3 id="全局作用域-global-scope-33" tabindex="-1"><strong>全局作用域(global scope) 33</strong> <a class="header-anchor" href="#全局作用域-global-scope-33" aria-hidden="true">#</a></h3><p>全局作用域的变量与函数可以程序任何地方使用，包括函数的内部与外包。</p><p>定义方式：在程序的最外层定义的变量与函数，或者没有通过var let const等关键字声明的变量</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> globalVariable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is a global variable</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">globalFunction</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is a global function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//没有关键字声明的变量默认是全局变量 </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(globalVariable)</span></span>
<span class="line"><span style="color:#82AAFF;">globalFunction</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(name)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 变量与函数定义在外层，所以是全局变量 </span></span>
<span class="line"></span></code></pre></div><h3 id="局部作用域-local-scope" tabindex="-1">局部作用域（local scope） <a class="header-anchor" href="#局部作用域-local-scope" aria-hidden="true">#</a></h3><p>指的是定义函数内部的变量与函数，它的作用域只能在函数内部，又称为函数作用域</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">localFunction</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">localVariable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is a local variable</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">innerFunction</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">localVariable</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">localVariable</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">innerFunction</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">localFunction</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>在上面的例子中，变量localVariable和函数innerFunction都是在函数localFunction内部定义的，因此它们都属于局部作用域。变量localVariable只能在localFunction函数内部被访问，而函数innerFunction也只能在localFunction函数内部被访问</p></blockquote><h3 id="块级作用域-block-scope" tabindex="-1">块级作用域（block scope） <a class="header-anchor" href="#块级作用域-block-scope" aria-hidden="true">#</a></h3><p>在es6之前只有全局作用域与函数作用域，es6引入了块级作用域，使用 <code>let</code>，<code>const</code>关键字来声明变量，主要是用来解决变量提升带来的&#39;奇怪的问题&#39;</p><p>怎么定义块级作用域，主要是通过 <code>{}</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 条件语句</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(xx)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(x)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//函数块</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//for循环块</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//单独一个块</span></span>
<span class="line"><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// try catch语句也可以</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>变量提升带来的困惑</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> myname </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">showName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">myname</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myname</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">myname</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">showName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="作用域链" tabindex="-1">作用域链 <a class="header-anchor" href="#作用域链" aria-hidden="true">#</a></h3><blockquote><p>zxx4 1111</p></blockquote><h3 id="闭包中的作用域" tabindex="-1">闭包中的作用域 <a class="header-anchor" href="#闭包中的作用域" aria-hidden="true">#</a></h3><h3 id="参考与demo" tabindex="-1">参考与demo <a class="header-anchor" href="#参考与demo" aria-hidden="true">#</a></h3><h3 id="其他1" tabindex="-1">其他1 <a class="header-anchor" href="#其他1" aria-hidden="true">#</a></h3><h4 id="soxzxx" tabindex="-1">soxzxx <a class="header-anchor" href="#soxzxx" aria-hidden="true">#</a></h4><h3 id="yyynouu" tabindex="-1">yyynouu <a class="header-anchor" href="#yyynouu" aria-hidden="true">#</a></h3>`,24),e=[p];function c(t,r,i,y,F,D){return n(),a("div",null,e)}const C=s(o,[["render",c]]);export{d as __pageData,C as default};
