import{_ as l,c as i,o as e,e as a}from"./app.2916bdaf.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"动画的基本原理","slug":"动画的基本原理","link":"#动画的基本原理","children":[]},{"level":2,"title":"前端动画分类","slug":"前端动画分类","link":"#前端动画分类","children":[]},{"level":2,"title":"实现前端动画","slug":"实现前端动画","link":"#实现前端动画","children":[]},{"level":2,"title":"开发实践","slug":"开发实践","link":"#开发实践","children":[{"level":3,"title":"动画资源","slug":"动画资源","link":"#动画资源","children":[]},{"level":3,"title":"工作实践","slug":"工作实践","link":"#工作实践","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"动画的优化","slug":"动画的优化","link":"#动画的优化","children":[]}]}],"relativePath":"其他/字节青训营/前端动画实现.md"}'),d={name:"其他/字节青训营/前端动画实现.md"},o=a('<h2 id="动画的基本原理" tabindex="-1">动画的基本原理 <a class="header-anchor" href="#动画的基本原理" aria-hidden="true">#</a></h2><ul><li>什么是动画 <ul><li>快速</li><li>连续排列</li><li>彼此差异极小</li><li>产生视觉错觉</li></ul></li><li>基本概念 <ul><li>帧</li><li>帧率<code>FPS</code></li></ul></li><li>空白补全 <ul><li>补间动画 <ul><li>浏览器：<code>keyframe</code>、<code>transition</code></li></ul></li><li>逐帧动画 <ul><li>CSS：<code>step</code></li></ul></li></ul></li></ul><h2 id="前端动画分类" tabindex="-1">前端动画分类 <a class="header-anchor" href="#前端动画分类" aria-hidden="true">#</a></h2><ul><li>CSS动画 <ul><li>使用场景 <ul><li>H5活动/宣传页</li></ul></li><li>推荐库 <ul><li><code>animation.css</code></li></ul></li><li><code>transition</code><ul><li>过渡动画</li><li></li></ul></li><li><code>keyframe</code><ul><li>定义动画</li><li><code>transform-origin</code><ul><li>设置定点（接收x,y,z三个值）</li><li>center / top / bottom / left / right / 数值</li></ul></li><li><code>transform</code><ul><li><code>translate</code>：移动</li><li><code>scale(x,y)</code>：缩放</li><li><code>rotate(a)</code>：围绕定点旋转</li><li><code>skew</code>：倾斜</li></ul></li></ul></li><li><code>animation</code><ul><li><code>animation-name</code>：none | Ident</li><li><code>animation-duration</code>：每个动画时长</li><li><code>animation-timing-function</code>：每个动画节奏</li><li><code>animation-delay</code>：每次动画延时进行</li><li><code>animation-iteration-time</code>：循环播放 <ul><li>infinite 无限播放 / 整数 / 小数</li></ul></li><li><code>animation-direction</code>：动画的运行方式</li><li><code>animation-fill-mode</code>：执行前执行后如何将样式应用于其目标</li><li><code>animation-play-state</code>：定义动画是否运行或暂停，可以配合<code>伪类</code>使用</li></ul></li></ul></li><li>SVG动画 <ul><li>SMIL：同步多媒体继承语言</li><li>JS</li><li>CSS</li><li>filter <ul><li>CSS属性 <ul><li>blur高斯模糊</li><li>contrast对比度</li><li>xxx灰度</li></ul></li><li>JS笔画 <ul><li><code>stroke-dasharray</code>：</li><li><code>stroke-dashoffset</code>：偏移量</li></ul></li></ul></li><li>推荐库 <ul><li><code>snap.svg</code></li><li><code>anime.js</code></li></ul></li></ul></li><li>JS动画</li></ul><blockquote><p>如何做选择 CSS：浏览器有优化，代码简单；控制不灵活，兼容性不佳， JS：使用灵活，实现复杂动画；调优不如CSS，需要做兼容 当您为U元素采用较小的独立状态时,使用CSS 在需要对动画进行矢量控制时,使用 JavaScript 在特定的场景下可以使用SVG,可以使用CSS或JS去操作SVG变化</p></blockquote><h2 id="实现前端动画" tabindex="-1">实现前端动画 <a class="header-anchor" href="#实现前端动画" aria-hidden="true">#</a></h2><ul><li>JS动画封装</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>\n<span class="line"></span></code></pre></div><ul><li>简单动画</li><li>复杂动画</li></ul><h2 id="开发实践" tabindex="-1">开发实践 <a class="header-anchor" href="#开发实践" aria-hidden="true">#</a></h2><h3 id="动画资源" tabindex="-1">动画资源 <a class="header-anchor" href="#动画资源" aria-hidden="true">#</a></h3><ul><li>动画代码示例 <ul><li><code>codepen</code></li><li><code>codesandbox.com</code></li></ul></li><li>设计网站 <ul><li><code>dribbble.com</code></li></ul></li><li>SVG <ul><li><code>Snap.svg</code></li><li><code>Svg.js</code></li></ul></li><li>JS <ul><li><code>GSAP</code></li><li>`TweenJS</li><li><code>Velocity</code></li></ul></li><li>CSS <ul><li><code>animate.css</code></li></ul></li></ul><h3 id="工作实践" tabindex="-1">工作实践 <a class="header-anchor" href="#工作实践" aria-hidden="true">#</a></h3><ul><li>Lottie格式</li></ul><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h3 id="动画的优化" tabindex="-1">动画的优化 <a class="header-anchor" href="#动画的优化" aria-hidden="true">#</a></h3>',16),c=[o];function t(n,r,s,u,h,S){return e(),i("div",null,c)}const p=l(d,[["render",t]]);export{_ as __pageData,p as default};
